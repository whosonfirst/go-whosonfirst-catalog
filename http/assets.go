// Code generated by go-bindata.
// sources:
// www/index.html
// www/javascript/mapzen.whosonfirst.geojson.js
// www/javascript/mapzen.whosonfirst.inspector.init.js
// www/javascript/mapzen.whosonfirst.inspector.js
// www/javascript/mapzen.whosonfirst.render.js
// www/css/mapzen.whosonfirst.inspector.css
// www/css/mapzen.whosonfirst.render.css
// DO NOT EDIT!

package http

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wwwIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xcf\x92\x9b\x30\x0c\xc6\xcf\x9b\xa7\xd0\xe8\xd2\x5b\xfc\x02\x36\xa7\x76\x67\xf6\xb4\xc7\x1c\x3b\x0e\x16\xc5\x89\xb1\xa9\x25\x48\xe9\xd3\x77\xc0\xe4\xef\xf4\x96\x0d\x27\xf3\x49\xf3\xd3\x27\x21\xac\x5b\xe9\x42\xb5\x01\xd0\x2d\x59\x37\x1f\x00\xb4\x78\x09\x54\xed\xda\xf4\x8d\xe1\x33\xc2\xbb\xcf\x2c\xf0\x11\xb9\xa7\x5a\x52\xd6\xaa\xc4\x4b\x6e\xf0\xf1\x08\x32\xf5\x64\x50\xe8\x8f\xa8\x9a\x19\x21\x53\x30\xc8\x32\x05\xe2\x96\x48\x10\xda\x4c\x8d\xc1\x9a\x59\x75\xb6\xff\x4b\x71\x7b\xe0\xed\x92\xa9\x9e\xc3\x9c\xda\xc4\x29\x36\xb3\xc1\xad\x3f\x1b\xfc\x72\x72\xa6\xe8\xe8\x01\xcb\x75\xf6\xbd\xdc\x82\x0f\x76\xb4\x45\x45\xe0\x5c\x1b\xbc\x0a\x67\x68\xe7\xe7\xce\xb1\xd2\xaa\xe8\xcf\xb0\x6e\x0d\xfe\xa2\x74\xe0\xf4\x1a\xf6\xda\xfc\x2b\xd0\xd7\x2f\xf6\x5a\xba\x8f\x5e\xee\x4b\xc0\xfa\xcc\x8b\xaf\xce\x9b\xaf\xf7\xc9\x4d\x6b\x75\xe7\x47\xf0\xce\x60\x6d\xe3\x68\x19\x8b\x7a\xd1\xc1\xe0\xef\x81\xf2\x84\xd5\xe6\x4d\x37\x29\x77\xd5\xe6\x0d\x40\xfb\xd8\x0f\xb7\x8e\x71\x41\x9c\x52\xf3\xd3\x3b\x84\x68\x3b\xba\xbe\x8d\x36\x0c\x64\x10\xa1\x0f\xb6\xa6\x36\x05\x47\xd9\xe0\x8f\x28\x94\xc1\xc2\xee\xf3\x1d\x3e\xbe\x2f\xdb\x36\x83\xf7\x83\x48\x8a\x2b\x99\x87\x7d\xe7\x57\x76\x48\xe9\x38\xf4\x58\xad\x3f\xa7\x56\x25\x73\xb6\xa5\x8a\xaf\xd5\xb7\x72\x7e\x7c\x68\xc2\xa0\x23\xb1\x3e\x2c\x73\xf9\x5f\x38\x13\x0f\x41\xee\xc3\x97\xa3\x56\x65\x5a\x5a\x95\x1b\xe4\x5f\x00\x00\x00\xff\xff\xab\x2a\xf8\x40\x49\x04\x00\x00")

func wwwIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwIndexHtml,
		"www/index.html",
	)
}

func wwwIndexHtml() (*asset, error) {
	bytes, err := wwwIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/index.html", size: 1097, mode: os.FileMode(420), modTime: time.Unix(1509041792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstGeojsonJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x94\xcf\x6e\x9b\x40\x10\xc6\xcf\xf8\x29\xa6\x27\x83\x82\xb0\x9d\xaa\xad\x14\x42\xa4\xaa\x52\x6f\x7d\x02\x84\xa2\x8d\x19\x60\x5b\x98\x45\xb0\x24\x4e\x1d\xbf\x7b\xb5\xff\x00\x1b\x5b\xbd\xb1\xf3\x7d\xfb\xdb\x99\xd9\x59\x5e\x59\x07\x0d\x6b\xff\x22\x41\xe2\x3e\x3e\x3e\xe0\x78\x8a\x57\x66\x15\xbd\x55\xa2\x17\x54\xf0\xae\x97\xa3\xe5\x2c\x68\xed\x57\xfc\x51\x89\xe2\x77\x2f\x14\xda\x2f\x06\xda\x4b\x2e\xc8\x0f\x8e\xab\x95\xa7\x8e\xed\xb1\x2e\x20\x01\xb5\xf4\xd6\x39\x76\xfc\x15\x9f\x5f\x5e\xc4\x61\xfd\x00\xa3\xd9\x02\xf4\x1e\xcf\xe3\x05\xb8\x48\xba\xd6\xd6\x2c\x38\x2a\xc1\xeb\x50\x0e\x1d\xc1\x85\x18\x2b\xed\xb4\xdc\x2a\xdf\x5b\x5c\x67\x90\x24\xb0\xfe\x89\x4c\x0e\x1d\xfe\x10\x75\x8d\xfa\xc8\xb5\x3d\x4b\xa7\x58\x18\xb5\x87\x64\x42\xbb\x98\xc5\x6b\xdf\x5e\x0c\xa4\xba\xe3\xb4\xa8\x46\x2a\x65\x15\x4f\xa4\xfe\xad\x66\xca\x31\x50\x8e\x05\x27\xcc\xe3\xb9\xa4\x5b\x74\x45\x22\xbc\xb9\x8b\x70\xb1\x4b\x6b\x85\xe8\xc0\x57\x06\x9e\x6c\x63\xe0\xf0\x68\x92\x8b\x81\xdf\xdd\xb9\xd2\x34\x40\xb5\x08\x12\x7d\x0b\xd1\xac\xfb\xbe\xab\x21\xe5\x59\x10\xcf\xfc\xcf\xae\x04\xe5\x4a\xb7\xb6\xfa\x51\xd2\xc9\x68\x69\x77\x26\xb9\x12\xb4\x74\x7f\x29\x4d\xbb\x3e\x67\xee\x30\x75\x55\xfe\x27\xd3\xb1\x40\x4d\x97\x6f\x8f\x7e\xb4\x31\x7b\xe7\x9e\xe7\x32\x32\xba\x45\x9f\x16\x18\x41\x13\x46\x90\xc1\x08\x3a\xc3\xe8\x3c\x8c\x7e\x1d\xa3\xcb\xb0\x18\x53\xd2\x93\x8d\x8d\x18\x57\xa9\xd1\x6f\x62\xc6\x6c\x4c\xf9\x4f\x36\x36\xc7\x98\x6c\xf4\xc7\x88\x99\xc1\xec\xb0\xa7\xa6\x1d\xa1\x29\x27\x34\xe9\x84\x76\x30\xe6\xb3\x8f\x75\x8f\xf0\x9f\x07\x30\x8e\xfd\x66\x03\xdf\x73\xd6\x4a\xcc\xa1\xe8\x44\x03\x95\x94\xed\xc3\x66\x53\xf2\x3e\xea\x25\xdb\xff\xc1\xc3\xbe\x62\x54\x62\xb4\x17\xcd\x86\x6d\x76\xdf\xee\xbf\x7c\xdd\x8d\x53\x59\xa2\x68\xe6\x8f\x45\xad\x51\x76\xef\xe7\x8f\x45\x74\xb9\x7d\x52\x4d\xa4\x57\x9c\x98\xc4\x7e\xf6\x5c\x6a\x26\x95\x23\xcd\x42\x1d\x02\x00\xa8\xa9\x34\xa1\xc5\xa0\x43\x02\xe3\xa8\x2b\x74\xba\xcd\xdc\x03\xd4\x53\x0f\xb6\xb5\x0a\x1a\xb5\x43\x5f\xf9\xa3\x2f\xe5\x59\xba\x53\x73\x6e\x0c\x54\x5e\x33\x6c\x9d\xe1\x34\x25\xd8\x70\x32\xb7\xfd\x8b\xc9\x2a\x6a\x38\x45\xac\x6d\xeb\x77\x9f\x86\xba\x0e\x75\xfa\xc1\x94\x7a\xc3\x0e\x73\x33\x3b\x2c\xcd\xf1\x19\x99\xca\x9b\x64\x2a\x2f\xc9\x33\xf3\x25\x59\x99\xe3\x8b\xa1\x31\x99\x87\xf6\x1c\x83\xf2\x6c\x8a\xa1\x03\x2e\xc6\xe7\xa8\x26\x50\xad\xd5\x9f\xde\xc1\xd4\xbf\x23\x5e\xad\x4e\x81\x1f\xc4\xab\x7f\x01\x00\x00\xff\xff\x2a\x82\x1a\x4f\x4a\x06\x00\x00")

func wwwJavascriptMapzenWhosonfirstGeojsonJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstGeojsonJs,
		"www/javascript/mapzen.whosonfirst.geojson.js",
	)
}

func wwwJavascriptMapzenWhosonfirstGeojsonJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstGeojsonJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.geojson.js", size: 1610, mode: os.FileMode(420), modTime: time.Unix(1509041792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstInspectorInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x41\x8b\xdb\x30\x10\x85\xcf\xd6\xaf\x18\x74\x52\x20\x88\xde\x5d\x1f\xda\x12\x48\x20\xbd\x05\x7a\x2c\x5a\x69\x9c\x88\x28\x23\x23\xc9\x31\xd9\xe0\xff\xbe\x48\x31\xde\xec\x12\x7c\x91\xc7\xe3\xf7\xbd\xf1\x3c\x0d\x96\x8c\x1f\xa4\x32\x66\x73\x45\x4a\x7b\x1b\x13\x12\x06\xc1\x9d\x57\x86\xaf\xa1\xed\x49\x27\xeb\x09\xf2\xbb\xc0\xac\x59\xdd\x59\xc5\xaa\xab\x0a\xf0\xd6\xa7\xe4\x09\x1a\x30\x5e\xf7\x17\xa4\x24\x8f\x98\x36\x0e\x73\xf9\xfb\xb6\x33\xd9\xc5\x9f\xfb\x8e\xaf\xea\x8c\x3c\xe4\xd2\x93\x76\x56\x9f\xa1\x99\xcd\xc5\xea\xce\x58\x05\x00\x90\xc2\x0d\xee\x2c\x57\x55\x99\x60\xcd\x92\xfb\xe0\xdb\xff\xd6\x64\x77\x56\x55\x45\x6a\x8d\xbc\x2a\xd7\x63\xfd\xd4\x48\xc1\x5e\xc4\xa4\x69\x41\xe4\x76\x03\x9c\xe7\x35\xca\xcc\x80\xa9\x0f\x04\xad\x72\xb1\x70\xe3\xec\xd6\xa9\x10\x71\x47\x49\x58\xf3\x85\xff\x09\x3f\x96\xe9\x8b\xea\xde\x91\xe4\x70\xf2\xd1\x53\x6b\x43\x4c\xd2\x52\xec\x50\x27\x1f\xe4\x23\x13\x61\xcd\x67\xba\x22\xc4\x6e\x76\x9c\x1e\x79\xfd\x00\x0d\x2c\x7a\x05\x24\x83\xa1\xe0\xf5\x0b\x1c\x63\xef\x52\x5c\x8a\x70\x92\xf0\x19\x9f\x1a\xd2\x12\x61\xd8\x1e\xfe\xee\x21\x87\x55\xb6\x7f\xfe\xac\xba\x0e\xc9\xfc\x39\x59\x67\x44\x28\xf0\x98\xcf\x2c\x19\xd9\xf4\x1f\xf9\xd4\x2a\xe9\x13\x08\x2c\xdb\x69\x4f\xd1\x3b\x94\xce\x1f\x05\xff\xb7\xfd\x75\xe0\x6b\xc0\xef\x58\xb9\xfc\x17\xc9\x8e\x35\xcb\x23\x3e\x02\x00\x00\xff\xff\x40\x1b\x11\x0b\xb1\x02\x00\x00")

func wwwJavascriptMapzenWhosonfirstInspectorInitJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstInspectorInitJs,
		"www/javascript/mapzen.whosonfirst.inspector.init.js",
	)
}

func wwwJavascriptMapzenWhosonfirstInspectorInitJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstInspectorInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.inspector.init.js", size: 689, mode: os.FileMode(420), modTime: time.Unix(1509041792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstInspectorJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x5b\x73\xdb\xb8\x15\x7e\x96\x7e\x05\x16\x9d\x59\x93\x13\x85\xce\xa5\x0f\x1d\xab\x7a\x68\xb6\xce\x5e\xea\x24\x9d\xc4\xed\xec\x0c\x47\xd5\xc0\xe4\xb1\x84\x35\x45\x30\x00\x14\x45\xcd\xfa\xbf\x77\x0e\xee\x94\x68\x5b\x6a\x5f\x9a\x87\xd8\x04\xbe\x73\xc1\x39\x1f\xce\x01\xe0\x2f\x4c\x92\x35\xeb\xfe\x0d\x2d\x99\xf9\x5f\x7e\xff\x9d\x7c\xbb\x9f\x8e\xed\x57\xb1\x5d\x09\x25\xda\x5b\x2e\x95\x0e\x90\xde\xa0\x83\x0f\xe0\x0b\xde\xaa\x0e\x2a\x2d\x24\x99\x91\xec\x76\xd3\x56\x9a\x8b\x36\xcb\xbf\x8d\xc7\x84\x10\x82\xb6\x2b\x56\xad\x80\xcc\xac\x06\x3f\xa8\xa0\xb9\xc5\xb1\xf1\x68\x3c\x3a\x6b\x84\xb8\xdb\x74\x67\x17\x24\xc8\xf3\x7a\x42\xaa\x9b\xfc\xdb\x78\x84\x02\xf6\x7f\x14\xeb\xa4\xd0\x82\xcc\x48\x2d\xaa\xcd\x1a\x5a\x5d\x34\xa2\x62\x28\x51\x98\x99\x4a\x34\xd3\x08\xde\xc8\x86\xcc\x9c\xc8\x33\x72\x76\x7e\x7e\x46\x9e\x91\x20\xb0\x12\x4a\xa7\xdf\x1d\xd3\xab\x96\xad\x01\xa1\xbc\x36\x58\x5e\x4f\xf7\x1d\x10\x6d\x23\x58\x4d\x66\xd1\x55\xa9\x3a\xf4\x73\x34\x1e\x8d\x10\xa0\x99\x5c\x02\x86\x51\xaa\xae\xb0\x1f\x53\x3b\xcb\x6f\x49\x66\x07\x0a\x09\xac\xde\x7d\xd2\x4c\x03\xf9\x6e\x46\xfe\x68\xe4\xd1\x82\x04\xbd\x91\x2d\xe2\xef\xa3\x46\xa5\x99\xde\xa8\x45\x25\x6a\x8c\xa2\xd5\x50\x9e\xd9\xd1\xb3\x39\x82\x7b\x38\x0d\x5f\xf5\x01\xee\x1a\xbe\x6a\x8b\x75\x4a\x25\xdb\x26\x20\x09\xaa\x13\xad\x82\x08\x43\x4c\xcd\x34\x23\x33\xd2\x6e\x9a\xc6\x49\x6a\xb9\x23\xde\x57\x37\xfb\xcb\xa7\x0f\xef\x8b\x8e\x49\x05\x99\x64\xdb\x3c\xf1\xbd\x62\xba\x5a\x91\x0c\xc2\xea\x2a\xd1\x2a\xd1\x40\xd1\x88\x65\x46\x2f\x3f\x7e\xa4\x13\x4c\xd1\x84\x40\xde\x5b\x3e\xb9\x65\x8d\x82\x54\xd1\x4d\x86\xc6\x72\x97\x8c\xfb\x83\xa4\x48\xf8\x8c\x7e\xc2\x96\xfc\xfa\xee\xea\x27\xad\xbb\x8f\xf0\x79\x03\x4a\x67\x5e\x44\xc2\xe7\x82\xd5\xf5\xe5\x17\x68\xf5\x15\x57\x1a\x5a\x90\x19\xc5\x4c\xd2\x89\x4b\x69\xde\xd3\x8a\x02\xa2\x83\x36\xa3\x3f\x5e\x5e\x7b\x3f\xb5\xdc\x40\xaa\x51\x41\x5b\x1b\x13\xf7\x13\x43\x63\x09\x6d\x0d\x32\xa5\xb1\xe3\xc6\xbe\xb7\x95\x90\xb5\xb2\x14\x29\xa9\xfb\x04\x4d\xe7\xe1\x83\xce\x13\x1a\x57\x62\xd3\x1a\x42\xd9\xb9\xa2\x81\x76\xa9\x57\x07\x41\xb8\xd9\x2d\xf4\xae\xf3\x1b\x2d\x0c\xe3\x18\xda\x2a\x53\x95\x4a\x6c\x64\xd5\x1f\xb6\xff\xdf\x0a\x49\x32\x44\xf0\xd9\x8b\x29\xe1\xe4\xcf\xd6\xfa\x94\xf0\x67\xcf\x52\x96\xcb\xe8\x4f\xc9\x03\x61\x8c\x97\x25\x45\x93\x74\x9e\xb0\xfe\x3b\xef\x5c\xa9\xe7\x81\x0d\xee\x47\x9c\x41\x6f\x88\x24\x46\x10\x67\x8c\xe7\x45\xb7\x51\xab\x4c\xa7\xbc\x82\x46\x41\x60\x61\x14\xb7\x48\xe9\x91\x86\x29\xe9\xd2\xac\x3a\x25\x64\xa4\x45\x12\x25\x76\xd3\x40\x5a\x57\x2a\x09\x4c\xc3\x65\x03\xf8\x95\x51\x33\x4f\x0f\xe5\x6c\x20\x17\x2b\x60\x35\xc8\xc7\xe4\x57\x41\xb8\x27\x52\xb0\xae\x83\xb6\xfe\x61\xc5\x9b\x3a\xdb\x13\xc6\xcd\xf8\x5e\xd4\x90\x51\x2b\x42\xf3\x01\xbf\x77\xdd\x69\xd6\x13\x81\xe3\x6c\x9b\x64\x0e\x58\x5e\x31\xb5\x3a\xc9\x72\x22\x70\x9c\x65\x14\x18\xb2\xbc\x91\xfc\x24\xc3\x11\x7f\x9c\xdd\x8d\xe4\x83\xa1\xe6\x6b\xde\x2e\x4f\x0b\x76\x2a\x72\x64\xb8\x8d\xc8\x90\x7d\xb5\x12\xdb\xd3\x88\x16\x05\x8e\xb3\xfd\x7c\xc8\x6c\x0d\x9a\xf1\x46\x9d\x64\xb9\x2f\xf3\x3f\x18\xb7\x0a\x16\x52\x6c\x1f\x33\x2c\x23\xc7\x02\xbe\x67\xb4\xb7\xe5\x9e\xc0\x26\x1b\xe4\x09\x64\x42\xe8\x27\x90\x91\x81\x4f\x19\x4f\x09\xf3\x04\xb6\x1f\xe4\x7e\xec\x4c\xb9\xea\x3b\x1b\x94\xe4\xc3\x05\x5f\x13\xde\xda\x1a\xe9\xeb\xbc\x39\x45\xe0\x40\xa9\x63\x85\xc7\xe8\xc4\x06\x16\xab\x6f\x72\xb4\x30\x1d\x23\x01\xa5\x32\xb1\x79\x79\xf4\xcd\x6e\x61\xd3\xe3\x1b\xd7\x68\xa0\x41\x21\xf8\x81\xd6\xe4\x35\xc7\x16\x95\x34\x97\xe4\x14\x93\x7a\xe1\x5a\xd6\x1e\x30\xb8\x81\x12\xa5\x2f\xba\xf3\x29\x9e\xaf\x12\x98\x6b\xb2\x16\x14\x5b\x5d\x52\x9d\xc2\x2c\x56\x92\xde\xa4\xcd\x6f\x94\xb6\x9b\x7d\x4e\xce\xc9\xcb\x17\xfe\xdf\x74\x74\x7e\x4e\x5a\xd6\x0a\x05\x95\x68\x6b\x75\xe8\x28\x12\x2f\xe8\x30\x55\xd2\x38\xf9\xd0\x8a\x16\x15\x34\xcd\xd3\x1b\x37\x6d\x4e\x28\x71\xd4\xb6\xb5\xf8\x3c\x1f\x08\xa7\x09\xf8\x53\xa6\xeb\x68\x3a\xe0\x8f\x32\x8c\xe8\x41\xb3\x66\x57\x9e\x60\x36\xe0\x8f\x32\x8b\x68\x34\xdb\x4f\xf8\x29\xf6\x3c\xbc\x50\xa0\xff\xa2\xb5\xe4\x37\x1b\x0d\x19\xc5\x64\x3e\x47\xbe\xe0\x59\x93\xe7\x53\x04\xef\x4b\x1c\xe3\x20\x0a\x0f\x66\xc3\x56\x96\x53\xf2\x11\x25\x8e\xcb\x88\xc1\x17\x5a\xbc\xe5\x5f\xa1\xce\x5e\xe7\xe4\x19\xa1\x8a\xee\x45\xcb\x57\xad\x13\x1c\x49\x45\xf6\xa2\x56\x35\x4c\x29\x3a\x21\xb4\x6a\x78\x75\xf7\x7c\x0d\x47\x49\x3d\x12\xeb\x9e\xd4\x51\x7d\xcb\x49\xec\xaf\x73\x0d\x9a\x1d\xd5\xb7\x9c\x8c\xb9\x1c\x9a\xca\x32\x23\x14\xa4\x14\x92\x9a\x62\x36\xf2\x8a\x1e\x5a\xb9\xc3\xfa\x65\xdf\x7b\x85\x41\x6e\xa0\x11\xe2\xea\x82\xc4\x20\x30\x6c\xc6\xc7\x61\x61\xf3\x3c\x0e\xf3\x0c\x7e\xc2\x66\x24\xdc\xe3\xc0\x34\x49\xfb\x5c\xef\x25\x50\xb4\x86\x17\xe9\x6d\xdd\xde\x46\xb1\x56\x9a\x3e\x03\x48\x42\x48\xee\xe9\xa3\x58\xc3\xa1\x29\x96\xc3\xbc\xc9\x5d\x4b\x1a\x29\x68\x6e\x0b\x73\xce\x72\x76\xcd\xfe\x0b\xb9\xd8\xf3\x2d\xed\xca\x99\x5f\x59\xa4\x80\x79\x27\x29\x37\x92\xcf\x5d\x71\x9f\x5a\xd1\xa1\xcb\x8c\xbb\x29\x1b\x8d\xf6\x02\x3a\x1e\x9d\xad\x78\x0d\xde\x91\xf4\x16\x9a\x7f\x1b\x1f\x9c\xe7\x52\x5e\x2e\x41\x3b\x52\xbe\xd9\xfd\x5c\x27\x94\xee\x1f\xe7\x0a\xde\xb6\x20\x7f\xba\x7e\x77\x45\x66\x84\xd2\x78\xef\x4d\x03\x90\xda\xc5\x58\x78\xd3\x26\x52\xa9\x83\x99\x59\xf8\x5e\x93\x8e\x21\x48\x2e\xab\x37\xa2\xde\x85\x76\x87\x1f\xbd\xdb\xf1\x60\x3b\x8e\xd3\x5b\x89\xf1\x7e\xec\xdc\x5a\xf3\x2f\x61\xa5\x0e\xbd\xb7\xd7\x78\x8d\x1b\xcd\x5f\xc2\x52\xed\xb7\xc0\xf4\x46\xa2\x7d\xb3\x3e\x74\x62\xa1\xc5\xc2\x0d\xf7\x5e\x2d\xdc\xeb\x55\x87\x91\x77\xf3\x25\xc5\x01\x90\x9a\x83\x8a\x5e\x7b\xd0\xc0\x5b\x9b\x7d\x60\x70\x3f\x16\xa8\x3d\x33\xe8\x7d\xf7\xd3\xcd\xe2\x01\xd1\x8b\x35\xeb\x8e\x0c\xc7\x9a\x75\x83\xa1\x58\xb3\xae\x1f\x87\xd3\xae\xcf\x46\xe2\xd1\xab\x84\xec\xab\x6f\xe0\x56\x1f\xd9\x31\xc2\x23\x0b\x5f\xae\x8e\x94\xb1\x42\xc1\x46\xd8\xa0\xac\x0b\x8f\x3d\x41\x99\x9f\x74\x91\x0e\xd2\xba\x1f\xf4\xa0\x2c\xdc\x04\xfb\xf3\x51\x61\xd4\x70\x70\x64\xd7\xb2\xbf\x45\xfe\xfb\x8d\xdb\xd3\x8a\x76\x82\x62\x4b\x5b\xc9\xb6\x8b\x35\xeb\x32\xc7\xcb\x3c\x54\x14\x3f\x93\xee\x6a\x0f\x4a\x8b\xca\x51\xc4\xb6\x2f\x41\x96\x8f\x58\x84\xc3\x63\xa7\xef\x5b\x61\xc3\xdf\x88\xaf\xc3\x1b\x60\x09\xe2\x37\x25\xda\xa2\x06\xc9\xbf\xc0\x02\x81\x89\xd3\xc9\x5d\x19\xfb\xee\x55\xd1\x30\x7d\xd5\x2e\x33\x84\x95\x2f\xe7\x13\xa3\xb8\x7c\x31\x4f\x79\xd2\xc2\x01\xf2\xb5\x47\xbe\x9a\x07\xa5\xbd\xa7\xcb\x37\x1f\xfe\xf1\xfe\xaf\x9f\xe8\x84\xa8\xed\x84\xb4\xe1\x49\xb0\x87\xb9\xbe\xfc\x74\x4d\x27\x24\x43\x4f\x66\x08\xca\xdd\xe3\xb7\xff\x77\x55\xbc\xb3\xeb\x63\x1d\xff\x1b\xec\xd2\xb4\x62\x8d\x1b\x6a\x3d\x36\x20\xcf\x59\xc7\x9f\xdf\xc1\x2e\xbe\x46\xa5\x6a\xed\xe6\x0e\xca\x31\xab\x67\x98\xc0\x3c\xcd\x42\xa6\xb6\x25\x6d\x98\xa6\x73\xeb\x9c\xfb\xc8\xc9\xf7\xdf\x13\x3b\x67\x6e\x25\x7e\x0e\x3f\x72\x93\x32\x57\x10\xfe\xc9\x61\x9b\xe1\xe2\x5f\xbe\x0a\x8f\xb2\x69\x77\x0a\x2f\x74\x88\xbf\xe5\xfa\x8d\xd8\xb4\xb5\xca\x4a\x1b\xaf\x79\x3e\x90\xf3\x86\xed\x4c\x95\xbe\xc2\x1c\xff\xf2\xe9\xc3\xfb\x94\x8c\x66\x7f\x22\xa0\x60\x75\x7d\x2d\xfc\xd6\x74\x1c\xed\x17\xdd\x94\xaa\xa6\xfe\x1e\xbc\xbf\x3e\xd2\x31\x7a\xa7\x30\x47\x36\x9a\x90\x75\xa8\x09\xf5\x56\xde\x53\xd0\x09\xa5\x97\x5c\xd1\xf4\xe1\x74\xb8\x99\x8d\xf0\xb7\x92\xbe\x03\xcd\x30\xee\xe9\xa3\x7a\x3a\x93\x27\xf7\xe6\x25\x88\x75\xf2\xc4\x6a\x61\x3f\x82\x58\xd3\xf8\xc4\x8a\x98\x21\x6d\x0e\xf6\xd0\x9b\xea\x43\x62\x3f\x40\xab\xa5\xe0\x75\x5f\xf4\xfc\x9c\xd4\xd0\x80\x1e\x50\xbe\x3f\xb5\xa7\xc0\xad\xc4\x17\x0f\xc4\x24\xc3\xb1\xb7\x7e\x4b\x6e\x88\x17\x84\xbe\xb5\x13\x74\x92\xb8\x0b\x5a\xee\x2e\xcc\x6f\x7e\x34\x56\xa0\x0b\x6b\x61\x12\x5d\xf6\x7f\x67\xb0\x8a\xf6\xd8\xd8\x3f\x89\x37\x4c\x69\x5e\x29\x60\xb2\x5a\x51\x53\xf3\x7a\x3e\xef\xe7\x31\x29\x5f\x06\x52\x22\x8b\xd6\x17\x38\xe4\x12\x6d\x27\xf1\x47\xa1\xba\x86\xeb\x8c\x4e\xdc\x35\xc0\x16\xae\x46\xb4\x6e\xbe\x7c\x11\x54\xaa\x6d\xc3\xb4\x1f\x7e\x19\x86\x5b\x48\xd0\xaf\xd2\xe1\x88\x7e\x3d\x0f\xca\x2b\xe1\x5e\x64\x4a\x17\xa3\xd2\x2a\x9e\x38\xb3\xf3\x49\x18\x37\x2a\x1e\x1e\xb7\x86\x93\x71\xa7\xe7\xa1\x71\xaf\x27\x1c\x87\xa3\x53\x8e\x6c\x3e\xc7\x76\x43\x5e\x10\xfa\x77\xd1\xec\x96\xa2\x0d\x59\xa6\xc6\x7b\xde\x32\x0d\x8a\x5e\x90\xd2\xaf\x66\x6e\xf3\xfa\x20\x69\x82\xc2\x7d\xda\x50\xcf\x1b\xda\x27\x4e\xda\xbb\x52\xea\x18\x8f\x8f\x67\x8e\xe6\x0d\xbc\xfe\xd3\x00\x65\xe2\x23\x97\x5f\xfa\x7d\x08\x06\xaf\x03\xa7\x70\x97\x78\xa0\x59\x10\xfd\x17\x35\x7f\x92\xc4\x6b\xf5\x1f\x68\x10\x19\x2c\x28\xe9\x73\xd9\x1d\xe1\xad\x41\x59\x57\x62\x27\xbe\x2b\xd6\x4c\x57\xab\x4c\x82\x2d\xee\xa3\x4a\xb4\x9a\xb7\x1b\x38\xb8\x4b\x22\xfe\x8e\x7c\x37\xf3\xd6\xf1\xee\x42\xe3\x45\xca\xad\xc3\xec\xf1\xbb\x79\x49\xc5\xcd\x6f\x50\x69\xeb\xfe\x7e\x0d\x48\xe7\x0f\x2f\xad\x76\xcf\xdc\xcd\xa3\xb6\xe9\xff\x4d\x76\x7b\xed\xfd\xed\xcf\xbf\x92\x77\x97\x74\x42\xd2\x23\xfe\x70\x8f\xb8\xb7\x7d\xff\x7e\x3a\x0e\xcd\xda\x01\xf1\xf0\xe5\x46\xef\xf3\x2c\x9f\x8e\xc6\xff\x09\x00\x00\xff\xff\xfc\xb9\xa6\x8d\xab\x1f\x00\x00")

func wwwJavascriptMapzenWhosonfirstInspectorJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstInspectorJs,
		"www/javascript/mapzen.whosonfirst.inspector.js",
	)
}

func wwwJavascriptMapzenWhosonfirstInspectorJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstInspectorJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.inspector.js", size: 8107, mode: os.FileMode(420), modTime: time.Unix(1509041792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstRenderJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x41\x6e\xdb\x3a\x10\x5d\x4b\xa7\x18\xe8\x2f\x22\xc1\xfe\x4a\xfe\x36\x8a\xf0\x11\x14\xdd\x76\xd5\x5d\x11\x04\xb4\x38\xae\x59\xd3\x92\x41\x8e\x63\xa7\x89\x81\xde\xa1\x37\xec\x49\x8a\x21\x29\x59\xb2\x65\x65\x91\x44\x12\xdf\x7b\x33\x9c\x79\x33\xc8\x8b\x30\xb0\x11\xdb\x9f\x58\x43\xd9\x3e\xbc\xbf\xc3\xdb\xb1\x88\xfd\x5b\xbe\x5f\x35\xb6\xa9\x97\xca\x58\xea\x20\x83\x8f\x01\x3e\x82\xcf\x0d\xd6\x12\x0d\x94\x90\x2e\x77\x75\x45\xaa\xa9\xd3\xec\x2d\x8e\x23\x8e\x6a\x51\x2f\xa1\x04\x7e\x8d\x6e\x3c\xf0\x59\x0a\x12\x37\xf7\xd0\x81\xe5\x1c\x2a\x3a\x38\x4a\xe4\x48\x7b\x23\xb6\x5b\xa7\x28\x9b\x6a\xb7\xc1\x9a\xf2\xca\xa0\x20\xfc\xac\x91\xdf\xd2\x44\xaa\x97\x24\x2b\x18\x1f\xb0\xb9\x45\x7a\x24\x32\x6a\xb1\x23\x4c\x93\x4a\x0b\x6b\x93\x39\x24\x72\xb7\xd9\xa2\x61\x6c\x2b\xee\x93\x70\x5c\xfe\x51\x4b\x48\x1f\x8d\x11\xaf\xb9\xb2\xee\x6f\x2a\xb3\xec\x8d\x4f\xa2\xee\x5e\x7c\x89\x70\xcb\x67\xad\x2c\xb5\x19\x3b\x91\x63\x1c\x01\x00\xf0\x23\x6a\x8b\xc0\x82\xf4\xba\xc5\x66\x99\xca\x0c\xca\x12\x92\x66\xf1\x03\x2b\x4a\xa6\x54\xa5\xaa\xce\x55\x3b\x41\x4f\xe3\xd4\xab\xa6\x26\xac\xe9\x8c\x4b\x78\xe8\x71\x87\x31\xae\xd5\xcf\x6e\x45\x9d\x64\x45\x14\x8a\x10\x08\x39\x97\xb2\x96\x9f\x56\x4a\xcb\x34\x04\xeb\xa7\xd3\xd6\xba\x0f\xf3\x4c\x8f\x32\x48\x3b\x53\xb7\xed\x2b\xbc\xf8\x71\x3e\xe8\xbd\xaa\x68\xb4\xf7\x5d\x11\xf9\xa2\x24\x16\x1a\x27\xd2\x77\xe7\xc1\x00\xee\xf9\x5a\xfb\xbd\x90\xfb\xfd\xaf\x44\x12\x4a\x5b\x47\x6b\x83\x2d\x1b\x03\xe9\x1a\x54\x0d\xd2\xb5\xa7\x2b\xb5\x69\xf6\x53\xf1\x4d\x08\xee\xb0\x5a\x2c\x50\xbb\x36\x40\x09\x6b\xff\xbd\x3b\x7c\xae\xe8\xc0\xa3\xc1\xb7\x84\xff\xf9\xb2\x30\x83\x24\x4f\x60\x06\x6b\xb8\xbf\x80\xaf\x50\x4c\x77\x8e\x56\x17\xa1\x2f\xd1\x5f\xf1\x40\x5f\x1a\x89\xe9\x29\xb5\x40\xf2\xfa\x83\x0e\x3a\x8c\x3b\x1e\x31\xda\xd5\x34\x64\x9b\x46\x47\x5a\x34\xf2\xf5\xdc\xd6\x82\x44\x2a\xbf\xad\x9f\xe6\xae\x0e\x81\x11\xd4\x07\x49\x30\xb9\x2f\x68\x9a\xfd\xe0\xdc\xe7\x1d\x10\xe7\x87\x03\xab\x7a\xbe\x77\xc5\xc0\xa8\xcd\xbe\x1b\x58\x0f\x0a\x76\x75\xd0\xc2\x3b\x35\xea\x59\x95\x27\xfd\x63\xab\x56\xcd\xce\x17\x2a\xd7\x58\x7f\xa7\xd5\x60\xb1\x84\xc3\x12\xee\xba\xe1\x77\x21\x2f\xc6\x37\xf9\xf3\xeb\x77\x32\xbe\x54\x4e\x3a\x0f\x25\xfc\x77\x5d\x27\xd4\xfa\xee\x69\x5c\xc6\xb9\x45\xd9\xa9\x9e\xee\xf4\xe5\x6c\x30\x4d\x95\x77\x05\x28\x78\xf0\x77\x2d\x40\xcd\x66\x21\x8d\xae\xf7\x8a\x70\x33\xa1\xac\x55\xdf\xb4\xd7\x8d\xa2\x7c\xf2\x3c\x21\xff\xf0\x84\xa8\x7e\x4b\x39\xc6\x35\xcf\xf0\xcd\x06\x67\x0c\x1e\x6f\x37\x43\x47\xba\xcd\x6d\x18\xef\xb6\x67\xbb\xb5\xe4\x47\x5c\x16\xd1\xed\xad\x4f\x7f\x45\x1b\x6d\xb7\x58\x29\xa1\xab\x95\x30\x36\x95\x59\xd1\x67\xf0\x9e\xfd\x78\x0d\x33\x9a\x1f\xcf\xb6\x98\x92\x7d\x4b\x8c\x00\x48\x91\xc6\x13\x86\x1b\x77\x0a\x3d\xb9\x17\x4e\x1b\xc1\xc9\xf6\x2b\x17\x76\x41\xbf\x64\x8c\x69\x4b\x16\xc5\x11\xff\x1b\xd0\x77\x60\x11\xc7\xc7\x2c\xcd\x8a\x28\xfe\x1b\x00\x00\xff\xff\xee\x07\x3a\xfe\x68\x08\x00\x00")

func wwwJavascriptMapzenWhosonfirstRenderJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstRenderJs,
		"www/javascript/mapzen.whosonfirst.render.js",
	)
}

func wwwJavascriptMapzenWhosonfirstRenderJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstRenderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.render.js", size: 2152, mode: os.FileMode(420), modTime: time.Unix(1509041792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstInspectorCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xdd\x8e\x9b\x30\x10\x85\xef\x79\x8a\xa9\xa2\xbd\x24\x62\xd3\x46\xaa\xcc\xd3\x38\xf6\x00\x56\xfc\x43\xc7\x43\x36\xdb\x2a\xef\x5e\x81\x21\x05\xc2\x6e\x7a\xb1\xca\x55\x66\x6c\x7f\x67\xe6\x1c\x76\x4a\xfa\x8b\x8c\xf0\x27\x03\x00\x70\x92\x6a\xe3\x05\xbc\xa2\x2b\xb3\x5b\x96\xed\x9c\x6c\xc7\x56\x83\xa6\x6e\x58\xc0\xf7\xa2\x68\xaf\xa9\xf9\xab\x43\x7a\x1f\xdb\xa7\x40\x1a\x49\xc0\xa1\xbd\x42\x0c\xd6\x68\xd8\x15\x45\x51\xce\xaf\x1e\x87\x8b\x09\x73\xcd\x37\x8a\x3d\x3b\x3f\x05\xe6\xe0\xc4\x5d\x41\x82\x54\x81\xdc\x48\x6a\xa5\xd6\xc6\xd7\x02\xf6\xc7\xfe\xcc\xac\x94\x5b\xac\x78\x26\x5e\x23\x4b\x63\xe3\x7f\x28\x0c\x17\xa4\xca\x86\x37\x01\x51\x51\xb0\x16\xbe\x19\xd7\x06\x62\xe9\x79\x31\xc2\x38\xfc\x6a\x86\x45\x75\x73\x08\xc2\xd8\x59\xfe\x4a\x25\xb0\x2d\x05\x9e\x6b\x89\xa1\x23\x85\x77\xc3\x57\x57\x3f\xe7\x3d\x74\x3f\x95\x7b\xcb\x32\x96\x27\x3b\xb1\xac\xf1\x38\xc1\x0e\x93\x75\x55\xf0\x9c\x57\xd2\x19\xfb\x2e\x20\x4a\x1f\xf3\x88\x64\xaa\xd4\x7c\x33\x9a\x1b\xf1\x5a\x14\x2f\xe5\x6c\x71\x79\x6c\xa5\x1a\x12\xd0\xf9\x88\x23\x87\x46\xc8\x05\x89\x8d\x92\x36\x97\xd6\xd4\x5e\x00\x87\xb6\x5c\xc6\x66\xb5\x9f\x54\xe8\xff\x0f\xef\x34\x93\x47\x52\x9d\x6b\x0a\x9d\xd7\xb9\x0a\x36\x90\xd8\xa1\xee\x7f\xe5\xc2\xc1\xe4\x1e\x37\xc6\xa7\x3a\xe3\x95\x47\x72\x9f\xc5\x47\xce\x86\x31\xfb\xc3\x2a\xc6\x02\xf6\x87\x23\xba\x41\x8e\x1e\xe5\x6c\x3e\xbc\x3c\xff\x01\x6c\x94\xfa\x4f\xe9\xda\xa2\xfb\x67\x92\xbc\x62\x82\x3b\x35\xed\xff\xc7\xcf\x97\xa7\xbe\x0f\x2f\xb5\x34\x59\x3d\xb8\x1a\xcd\x6f\x14\xd1\xc9\xbe\x3b\x4f\xd2\x71\x33\x49\xf3\x24\x3e\x9e\xb8\x65\xd9\x5e\x59\xa3\xce\xb9\x9b\x18\xc9\x16\x38\xd9\x0e\x67\xcb\xd7\xa8\x02\x49\x36\xc1\x8b\xce\x6b\xa4\x3e\x74\xe9\x3a\x12\x05\xfa\xc8\x5d\x68\x8d\x3f\x2f\x89\x7f\x03\x00\x00\xff\xff\x08\x5c\xb8\xab\x1a\x05\x00\x00")

func wwwCssMapzenWhosonfirstInspectorCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstInspectorCss,
		"www/css/mapzen.whosonfirst.inspector.css",
	)
}

func wwwCssMapzenWhosonfirstInspectorCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstInspectorCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.inspector.css", size: 1306, mode: os.FileMode(420), modTime: time.Unix(1509041792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstRenderCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xdf\x6a\xf3\x30\x0c\xc5\xef\xf3\x14\xfa\xf8\xd8\xa5\x4b\x57\xd8\x8d\xf7\x34\x4e\xac\x24\x62\xfe\x87\xac\x6c\x2d\xa3\xef\x3e\x12\xbb\xa1\x66\x2d\x8c\x5c\xe9\x28\x3a\xd2\xef\x78\x71\xf0\xdd\x01\x00\x38\xca\xa2\xb2\x5c\x1c\x2a\xb9\x24\xd4\x10\x62\xc0\xf7\xad\xe5\x0d\x4f\x14\xf4\x31\x9d\x4b\x9d\x8c\xb5\x14\xa6\x22\x5c\xbb\xee\x60\x17\x9f\x90\x41\x4c\xef\x70\xb7\x0b\xa8\x66\xa4\x69\x16\x7d\x42\x5f\x06\xc7\x18\x44\x8d\xc6\x93\xbb\x68\xc8\x26\x64\x95\x91\x69\x2c\xcd\x2f\xb2\x32\xeb\xd7\xe3\xf1\xa5\xd4\x7d\x64\x8b\xac\x72\x32\xc3\xba\x0c\x96\x90\x51\x1e\xec\x13\xae\x2b\x3f\x91\x85\x06\xe3\x94\x71\x34\x05\x0d\x12\x53\x7b\x2f\xec\x04\x95\x68\x13\xd6\xba\x71\x9d\xab\x5f\x6f\x86\x8f\x89\xe3\x12\xac\x1a\xa2\x8b\xac\xff\xa3\x5d\xbf\xe6\x3c\x89\xe9\x3e\xaa\xaa\xf6\x51\x24\xfa\xda\xd8\x16\xdc\x35\x1d\x8e\xa2\x21\x47\x47\x16\x64\xa6\x00\xff\xc8\xa7\xc8\x62\x82\x34\x26\xbc\x85\xf7\xe4\xc7\xdd\x54\xf0\x2c\x95\x78\x35\xfe\xcd\xd7\x46\x70\x38\xbd\xa1\x6f\x71\xf5\x48\x9c\x45\x0d\x33\x39\x7b\x43\xbf\x83\x7b\x72\x68\x6b\xe1\xcc\x63\x87\x5b\x10\x7f\x30\x29\x8f\x79\x9b\x7f\x88\xd5\x52\x34\x5a\x4d\xf5\xb0\xeb\x4d\x04\xd7\xee\x27\x00\x00\xff\xff\xcd\x95\x93\x60\xe8\x02\x00\x00")

func wwwCssMapzenWhosonfirstRenderCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstRenderCss,
		"www/css/mapzen.whosonfirst.render.css",
	)
}

func wwwCssMapzenWhosonfirstRenderCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstRenderCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.render.css", size: 744, mode: os.FileMode(420), modTime: time.Unix(1509041792, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"www/index.html": wwwIndexHtml,
	"www/javascript/mapzen.whosonfirst.geojson.js":        wwwJavascriptMapzenWhosonfirstGeojsonJs,
	"www/javascript/mapzen.whosonfirst.inspector.init.js": wwwJavascriptMapzenWhosonfirstInspectorInitJs,
	"www/javascript/mapzen.whosonfirst.inspector.js":      wwwJavascriptMapzenWhosonfirstInspectorJs,
	"www/javascript/mapzen.whosonfirst.render.js":         wwwJavascriptMapzenWhosonfirstRenderJs,
	"www/css/mapzen.whosonfirst.inspector.css":            wwwCssMapzenWhosonfirstInspectorCss,
	"www/css/mapzen.whosonfirst.render.css":               wwwCssMapzenWhosonfirstRenderCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"www": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.inspector.css": &bintree{wwwCssMapzenWhosonfirstInspectorCss, map[string]*bintree{}},
			"mapzen.whosonfirst.render.css":    &bintree{wwwCssMapzenWhosonfirstRenderCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{wwwIndexHtml, map[string]*bintree{}},
		"javascript": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.geojson.js":        &bintree{wwwJavascriptMapzenWhosonfirstGeojsonJs, map[string]*bintree{}},
			"mapzen.whosonfirst.inspector.init.js": &bintree{wwwJavascriptMapzenWhosonfirstInspectorInitJs, map[string]*bintree{}},
			"mapzen.whosonfirst.inspector.js":      &bintree{wwwJavascriptMapzenWhosonfirstInspectorJs, map[string]*bintree{}},
			"mapzen.whosonfirst.render.js":         &bintree{wwwJavascriptMapzenWhosonfirstRenderJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
