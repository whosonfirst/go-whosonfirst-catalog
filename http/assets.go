// Code generated by go-bindata.
// sources:
// static/javascript/mapzen.whosonfirst.geojson.js
// static/javascript/mapzen.whosonfirst.inspector.init.js
// static/javascript/mapzen.whosonfirst.inspector.js
// static/javascript/mapzen.whosonfirst.render.js
// static/css/mapzen.whosonfirst.inspector.css
// static/css/mapzen.whosonfirst.render.css
// DO NOT EDIT!

package http

import (
	"github.com/whosonfirst/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticJavascriptMapzenWhosonfirstGeojsonJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x94\xcf\x6e\x9b\x40\x10\xc6\xcf\xf8\x29\xa6\x27\x83\x82\xb0\x9d\xaa\xad\x14\x42\xa4\xaa\x52\x6f\x7d\x02\x84\xa2\x8d\x19\x60\x5b\x98\x45\xb0\x24\x4e\x1d\xbf\x7b\xb5\xff\x00\x1b\x5b\xbd\xb1\xf3\x7d\xfb\xdb\x99\xd9\x59\x5e\x59\x07\x0d\x6b\xff\x22\x41\xe2\x3e\x3e\x3e\xe0\x78\x8a\x57\x66\x15\xbd\x55\xa2\x17\x54\xf0\xae\x97\xa3\xe5\x2c\x68\xed\x57\xfc\x51\x89\xe2\x77\x2f\x14\xda\x2f\x06\xda\x4b\x2e\xc8\x0f\x8e\xab\x95\xa7\x8e\xed\xb1\x2e\x20\x01\xb5\xf4\xd6\x39\x76\xfc\x15\x9f\x5f\x5e\xc4\x61\xfd\x00\xa3\xd9\x02\xf4\x1e\xcf\xe3\x05\xb8\x48\xba\xd6\xd6\x2c\x38\x2a\xc1\xeb\x50\x0e\x1d\xc1\x85\x18\x2b\xed\xb4\xdc\x2a\xdf\x5b\x5c\x67\x90\x24\xb0\xfe\x89\x4c\x0e\x1d\xfe\x10\x75\x8d\xfa\xc8\xb5\x3d\x4b\xa7\x58\x18\xb5\x87\x64\x42\xbb\x98\xc5\x6b\xdf\x5e\x0c\xa4\xba\xe3\xb4\xa8\x46\x2a\x65\x15\x4f\xa4\xfe\xad\x66\xca\x31\x50\x8e\x05\x27\xcc\xe3\xb9\xa4\x5b\x74\x45\x22\xbc\xb9\x8b\x70\xb1\x4b\x6b\x85\xe8\xc0\x57\x06\x9e\x6c\x63\xe0\xf0\x68\x92\x8b\x81\xdf\xdd\xb9\xd2\x34\x40\xb5\x08\x12\x7d\x0b\xd1\xac\xfb\xbe\xab\x21\xe5\x59\x10\xcf\xfc\xcf\xae\x04\xe5\x4a\xb7\xb6\xfa\x51\xd2\xc9\x68\x69\x77\x26\xb9\x12\xb4\x74\x7f\x29\x4d\xbb\x3e\x67\xee\x30\x75\x55\xfe\x27\xd3\xb1\x40\x4d\x97\x6f\x8f\x7e\xb4\x31\x7b\xe7\x9e\xe7\x32\x32\xba\x45\x9f\x16\x18\x41\x13\x46\x90\xc1\x08\x3a\xc3\xe8\x3c\x8c\x7e\x1d\xa3\xcb\xb0\x18\x53\xd2\x93\x8d\x8d\x18\x57\xa9\xd1\x6f\x62\xc6\x6c\x4c\xf9\x4f\x36\x36\xc7\x98\x6c\xf4\xc7\x88\x99\xc1\xec\xb0\xa7\xa6\x1d\xa1\x29\x27\x34\xe9\x84\x76\x30\xe6\xb3\x8f\x75\x8f\xf0\x9f\x07\x30\x8e\xfd\x66\x03\xdf\x73\xd6\x4a\xcc\xa1\xe8\x44\x03\x95\x94\xed\xc3\x66\x53\xf2\x3e\xea\x25\xdb\xff\xc1\xc3\xbe\x62\x54\x62\xb4\x17\xcd\x86\x6d\x76\xdf\xee\xbf\x7c\xdd\x8d\x53\x59\xa2\x68\xe6\x8f\x45\xad\x51\x76\xef\xe7\x8f\x45\x74\xb9\x7d\x52\x4d\xa4\x57\x9c\x98\xc4\x7e\xf6\x5c\x6a\x26\x95\x23\xcd\x42\x1d\x02\x00\xa8\xa9\x34\xa1\xc5\xa0\x43\x02\xe3\xa8\x2b\x74\xba\xcd\xdc\x03\xd4\x53\x0f\xb6\xb5\x0a\x1a\xb5\x43\x5f\xf9\xa3\x2f\xe5\x59\xba\x53\x73\x6e\x0c\x54\x5e\x33\x6c\x9d\xe1\x34\x25\xd8\x70\x32\xb7\xfd\x8b\xc9\x2a\x6a\x38\x45\xac\x6d\xeb\x77\x9f\x86\xba\x0e\x75\xfa\xc1\x94\x7a\xc3\x0e\x73\x33\x3b\x2c\xcd\xf1\x19\x99\xca\x9b\x64\x2a\x2f\xc9\x33\xf3\x25\x59\x99\xe3\x8b\xa1\x31\x99\x87\xf6\x1c\x83\xf2\x6c\x8a\xa1\x03\x2e\xc6\xe7\xa8\x26\x50\xad\xd5\x9f\xde\xc1\xd4\xbf\x23\x5e\xad\x4e\x81\x1f\xc4\xab\x7f\x01\x00\x00\xff\xff\x2a\x82\x1a\x4f\x4a\x06\x00\x00")

func staticJavascriptMapzenWhosonfirstGeojsonJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptMapzenWhosonfirstGeojsonJs,
		"static/javascript/mapzen.whosonfirst.geojson.js",
	)
}

func staticJavascriptMapzenWhosonfirstGeojsonJs() (*asset, error) {
	bytes, err := staticJavascriptMapzenWhosonfirstGeojsonJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/mapzen.whosonfirst.geojson.js", size: 1610, mode: os.FileMode(420), modTime: time.Unix(1563546049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptMapzenWhosonfirstInspectorInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x6b\x1b\x31\x10\x85\xcf\xab\x5f\x31\xe8\x24\x43\x10\xbd\xbb\x3e\xb4\x25\x90\x40\x7a\x0b\xf4\x58\x54\x69\x36\x1e\x22\x8f\x84\xa4\xb5\x71\x8d\xff\x7b\x19\x79\xbb\x6e\x4b\xd9\x8b\x90\x66\xdf\x9b\xf7\x69\xb4\x27\xe2\x90\x4e\xd6\x85\xf0\x78\x44\x6e\x2f\x54\x1b\x32\x16\xa3\x63\x72\x41\x3f\xc0\x38\xb1\x6f\x94\x18\xe4\x6c\x50\x34\x9b\x8b\x1a\xd4\x70\x74\x05\x7e\x4c\xad\x25\x86\x1d\x84\xe4\xa7\x03\x72\xb3\x6f\xd8\x1e\x23\xca\xf6\xf3\xf9\x39\x48\x97\xf4\x3e\x65\xbd\xd9\x8a\xe5\x26\xb7\x89\x7d\x24\xff\x0e\xbb\xa5\xb9\xd9\x5c\x94\x1a\x00\x00\x5a\x39\xc3\x45\xc9\x6e\xe8\x09\x14\xd6\xba\x9f\xd2\xf8\x9d\x82\x74\x57\xc3\xd0\xa5\x14\xec\xd1\xc5\x09\xb7\x7f\x14\x5a\xa1\x83\x99\x35\x23\x18\x29\xef\x40\x6b\xb9\x46\xcf\x2c\xd8\xa6\xc2\x30\xba\x58\xbb\xef\xba\x74\xcb\xae\x54\x7c\xe6\x66\x28\xfc\xe5\xff\x08\x1f\xd6\xdd\x82\x5e\x33\x31\x63\x59\xe3\x9f\x25\x7d\x3c\xc3\x7c\xb0\xb5\x9d\x23\xda\x40\x35\x47\x77\x86\x1d\x68\xe2\x48\x8c\x5a\x34\x07\x97\x7f\x22\xdb\xd3\x3e\xd5\xc4\x23\x95\xda\x2c\x71\xcd\xe8\x5b\x2a\xf6\x36\x6b\x43\xe1\xfe\x6a\xa6\xd4\xbc\x90\xaa\x61\x25\x84\x53\x8f\x98\xa5\xc2\x2f\xe4\xab\x79\x05\x39\x60\xe9\x11\xdb\x7b\xc4\x62\xc7\x3a\xc5\x56\xd7\xae\x3f\x4b\xf4\x62\x9f\x0b\xb6\x33\x3e\xbd\x7e\x7d\x11\xb2\x3b\xd5\xef\xcf\x2e\x67\xe4\xf0\x65\x4f\x31\x98\xd2\xcd\x57\x59\x45\x72\x55\x33\x87\xac\xde\x35\xbf\x07\x83\x7d\x02\x3e\x71\x4d\x11\x6d\x4c\x6f\x46\x7f\x7b\xfa\xf4\xaa\x1f\x00\xff\xb5\xf5\x1f\xef\x3f\xaf\x7a\xdd\x2a\x89\xf8\x15\x00\x00\xff\xff\x73\x0f\x47\x6b\x2d\x03\x00\x00")

func staticJavascriptMapzenWhosonfirstInspectorInitJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptMapzenWhosonfirstInspectorInitJs,
		"static/javascript/mapzen.whosonfirst.inspector.init.js",
	)
}

func staticJavascriptMapzenWhosonfirstInspectorInitJs() (*asset, error) {
	bytes, err := staticJavascriptMapzenWhosonfirstInspectorInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/mapzen.whosonfirst.inspector.init.js", size: 813, mode: os.FileMode(420), modTime: time.Unix(1563975087, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptMapzenWhosonfirstInspectorJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x5b\x73\xdb\xba\x11\x7e\x96\x7e\x05\xc2\xce\x1c\x93\x8d\x4c\xe7\xd2\x87\x8e\x54\x3d\xf4\x9c\xe6\xdc\xea\x24\x9d\x24\xd3\xe9\x8c\x46\xd5\xc0\xe4\x4a\xc2\x31\x05\x30\x00\x14\x45\xf1\xd1\x7f\xef\x2c\xee\x94\x69\x5b\x6a\x5f\x9a\x87\xd8\x04\xbe\xbd\x60\xf1\x61\x17\x58\x7f\xa1\x92\x6c\x68\xfb\x0d\x38\x99\xfa\x5f\x7e\xff\x9d\xdc\x1d\x26\x43\xfb\x55\xee\xd6\x42\x09\xbe\x64\x52\xe9\x00\xe9\x0c\x3a\x78\x0f\xbe\x64\x5c\xb5\x50\x69\x21\xc9\x94\xe4\xcb\x2d\xaf\x34\x13\x3c\x2f\xee\x86\x43\x42\x08\x41\xdb\x15\xad\xd6\x40\xa6\x56\x83\x1f\x54\xd0\x2c\x71\x6c\x38\x18\x0e\x2e\x1a\x21\x6e\xb7\xed\xc5\x98\x04\x79\x56\x8f\x48\x75\x53\xdc\x0d\x07\x28\x60\xff\x47\xb1\x56\x0a\x2d\xc8\x94\xd4\xa2\xda\x6e\x80\xeb\xb2\x11\x15\x45\x89\xd2\xcc\x54\xa2\x99\x44\xf0\x56\x36\x64\xea\x44\x9e\x93\x8b\xab\xab\x0b\xf2\x9c\x04\x81\xb5\x50\x3a\xfd\x6e\xa9\x5e\x73\xba\x01\x84\xb2\xda\x60\x59\x3d\x39\x76\x40\xf0\x46\xd0\x9a\x4c\xa3\xab\x52\xb5\xe8\xe7\x60\x38\x18\x20\x40\x53\xb9\x02\x0c\xa3\x54\x6d\x69\x3f\x26\x76\x96\x2d\x49\x6e\x07\x4a\x09\xb4\xde\x7f\xd4\x54\x03\x79\x36\x25\x7f\x32\xf2\x68\x41\x82\xde\x4a\x8e\xf8\x43\xd4\xa8\x34\xd5\x5b\xb5\xa8\x44\x8d\x51\xb4\x1a\x66\x17\x76\xf4\x62\x3e\xe9\xa2\x34\x7c\xd5\xf7\x50\x9f\xe0\xab\xb6\x48\x07\x96\x74\x97\x80\x24\xa8\x56\x70\x05\x11\x86\x98\x9a\x6a\x4a\xa6\x84\x6f\x9b\xc6\x49\x6a\xb9\x27\xde\x53\x37\xfb\xeb\xc7\xf7\xef\xca\x96\x4a\x05\xb9\xa4\xbb\x22\xf1\xbc\xa2\xba\x5a\x93\x1c\xc2\xda\x2a\xc1\x95\x68\xa0\x6c\xc4\x2a\xcf\xde\x7c\xf8\x90\x8d\x70\x83\x46\x04\x8a\xce\xe2\xc9\x92\x36\x0a\x52\x45\x37\x39\x1a\x2b\xdc\x56\x1c\xee\x6d\x89\x84\xcf\xe8\x27\xec\xc8\xbf\xde\x5e\xff\xac\x75\xfb\x01\x3e\x6f\x41\xe9\xdc\x8b\x48\xf8\x5c\xd2\xba\x7e\xf3\x05\xb8\xbe\x66\x4a\x03\x07\x99\x67\xb8\x8f\xd9\xc8\x6d\x68\xd1\xd1\x8a\x02\xa2\x05\x9e\x67\x3f\xbd\xf9\xe4\xfd\xd4\x72\x0b\xa9\x46\x05\xbc\x36\x26\x0e\x23\x43\x62\x09\xbc\x06\x99\x92\xd8\x31\xe3\xd8\xdb\x4a\xc8\x5a\x59\x82\xcc\x32\xf7\x09\x3a\x9b\x87\x8f\x6c\x9e\x90\xb8\x12\x5b\x6e\xe8\x64\xe7\xca\x06\xf8\x4a\xaf\xef\x05\xe1\x66\xbf\xd0\xfb\xd6\x1f\xb3\x30\x8c\x63\x68\x6b\x96\xaa\x54\x62\x2b\xab\xee\xb0\xfd\x7f\x29\x24\xc9\x11\xc1\xa6\x2f\x26\x84\x91\xbf\x58\xeb\x13\xc2\x9e\x3f\x4f\x39\x2e\xa3\x3f\x33\x16\x08\x63\xbc\x9c\x65\x68\x32\x9b\x27\x9c\x7f\xe6\x9d\x9b\xe9\x79\x60\x83\xfb\x11\x67\xd0\x1b\x22\x89\x11\xc4\x19\xe3\x79\xd9\x6e\xd5\x3a\xd7\x29\xaf\xa0\x51\x10\x58\x18\xc5\x2d\x52\x7a\xa4\x61\x4a\xba\x34\xab\x4e\x09\x19\x69\x91\x44\x89\xde\x34\x90\x66\x95\x4a\x02\xd5\xf0\xa6\x01\xfc\xca\x33\x33\x9f\xdd\x97\xb3\x81\x5c\xac\x81\xd6\x20\x1f\x93\x5f\x07\xe1\x8e\x48\x49\xdb\x16\x78\xfd\xc3\x9a\x35\x75\x7e\x24\x8c\x87\xf1\x9d\xa8\x21\xcf\xac\x48\x56\xf4\xf8\xbd\x6f\xcf\xb3\x9e\x08\x9c\x66\xdb\x6c\x66\x8f\xe5\x35\x55\xeb\xb3\x2c\x27\x02\xa7\x59\x46\x01\x63\x39\x1a\x6d\xa8\xd2\x1b\x51\x9f\x65\xb7\x2b\x73\x9a\x69\x94\x21\x1b\x51\xb3\x25\x83\xba\x6f\xf5\x5b\xc9\xce\x72\x22\xe2\x4f\x73\x60\x2b\x59\xef\x76\xb3\x0d\xe3\xab\xf3\x36\x3c\x15\x39\x71\xcb\x8d\x48\x9f\x7d\xb5\x16\xbb\xf3\xc8\x1e\x05\x4e\xb3\x7d\xd9\x67\xb6\x06\x4d\x59\xa3\xce\xb2\xdc\x95\xf9\x1f\x8c\x5b\x05\x0b\x29\x76\x8f\x19\x96\x91\xe7\x01\xdf\x31\xda\x39\xf6\x4f\x60\x93\x43\xfa\x04\x32\x39\x54\x4f\x20\xbb\xc7\xe0\x09\x70\xa4\xeb\x53\x9e\xa6\xec\x7a\x02\xdb\xdd\x91\x6e\xa0\x4d\x7e\xed\xae\x2c\x28\x29\xfa\x2b\x94\x26\x8c\xdb\xa4\xee\x0b\x93\xb9\xf6\xe0\xc0\x4c\xc7\x92\x84\xa1\x8c\x15\x37\x96\x8b\xe4\x2e\x64\x4a\x5c\x02\x4a\x65\x62\xb5\xf5\xe8\x9b\xfd\xc2\xee\xa5\xaf\xb4\x83\x9e\x8a\x8a\xe0\x07\x6a\xa9\xd7\x1c\x6b\x6a\x52\x0d\x93\x6b\x57\xea\x85\xa9\xb1\x09\x24\x38\x80\xd8\x99\xaf\x0f\xf3\xc9\x60\x60\x2c\xa7\xd5\x21\x80\x62\x55\x4e\x92\x58\x98\xc5\x84\xd3\x99\xb4\x3b\x1b\xa5\x6d\x4e\x98\x93\x2b\xf2\xf2\x85\xff\x37\x19\x5c\x5d\x11\x4e\xb9\x50\x50\x09\x5e\x2b\x2b\x9e\x28\x41\x7a\x06\x15\x26\x9f\x1b\x1f\x13\x84\xa3\x65\x00\xb9\x6f\x9b\x78\xbb\x8b\xae\xb5\xbb\xe4\xfd\x8d\x6a\xf0\x7c\x26\x7f\x34\xfe\x14\x3d\xe1\x59\x54\xd0\x34\x4f\x27\x8b\xb4\x28\xa3\xc4\x49\xa9\xc2\xe2\x8b\x20\x7f\x14\xf4\x27\x4d\xd7\xd1\x74\xc0\x9f\x64\x18\xd1\xbd\x66\x4d\x26\x38\xc3\x6c\xc0\x9f\x64\x16\xd1\x45\x37\xc8\x3e\xa1\x9c\x61\x33\x15\x39\xc9\x6c\xad\x4b\x2d\x7e\xf9\xf8\xfe\xa3\x96\x8c\xaf\xf2\xe2\xc8\x05\x4c\x53\x67\x98\xf7\xf0\x93\x4c\x6f\x25\xeb\xdf\x5e\x9b\xf1\xce\xd9\xe0\x28\x71\xda\x16\x1b\x7c\xa9\xc5\x8f\xec\x2b\xd4\xf9\xeb\x82\x3c\x27\x99\xca\x8e\xd6\xee\xb3\xe9\x19\x8e\xa4\x22\xa5\x02\xfd\x57\xad\x25\xbb\xd9\x6a\xc8\xb3\xaa\xa1\x4a\x65\x23\x92\x55\x0d\xab\x6e\x2f\x37\x70\x92\x14\x1e\xd9\x4b\x09\x1b\xa1\xe1\x12\x13\x08\xbe\x93\x58\x31\x41\xb9\x3e\xe1\x93\x6a\xb0\x93\x38\x5e\xee\x06\x34\x3d\xa9\x06\x3b\x19\xf3\xd4\x36\xe9\x6f\x4a\x32\x90\x52\xc8\xcc\xe4\xda\x81\x57\xf4\x50\x00\x1c\xd6\xaf\xfe\xe0\x15\x06\xb9\x9e\xa2\x8e\xab\x0b\x12\xbd\xc0\x70\xc8\x1f\x87\x85\x43\xf9\x38\x2c\x3d\x47\x8f\x23\x3d\xe5\x9f\xf0\x2e\x32\xf4\x71\x60\xba\x9d\xc7\x87\xa3\xb3\xd5\x82\x1b\x22\xa5\x5d\x12\xdb\x07\xc0\xdc\x6f\x0a\x26\x20\x6b\x21\xe9\x8f\x0c\x62\x49\x82\xa6\x5c\x3d\x4a\xb4\xc2\x95\xd8\x81\x82\x66\x59\x9a\x4b\xa6\x33\x6f\xce\x6d\xd8\xbc\x40\x87\xf4\x7e\x91\xfb\xa5\x45\xb6\x98\x06\xd5\x6c\x2b\xd9\xdc\x15\xa2\x89\x5d\x57\xdf\x3b\xd2\x35\x29\x8c\x46\xfb\xf6\x1f\x0e\x2e\xd6\xac\x06\xef\x42\xda\x00\x28\xee\x86\xf7\xae\xb1\x29\x85\x57\xa0\x1d\x7f\xbf\xdf\xff\x52\x27\xec\xef\xde\x62\x4b\xc6\x39\xc8\x9f\x3f\xbd\xbd\x26\x53\x92\x65\xb1\xe5\x90\x2e\x3d\xb5\x8b\x51\xf0\xa6\x4d\x8c\x52\x07\xf3\xce\x9b\xca\x5d\x37\x62\x08\x92\x3e\xc1\x8d\xa8\xf7\xa1\x34\xe3\x47\xa7\x31\xd1\x7b\xbd\x88\xd3\x3b\x89\xf1\x7e\xec\xba\x5e\xb3\x2f\x61\xa5\x0e\x7d\x74\x2c\x59\x8d\x67\xd2\xbf\x7f\x53\xed\x4b\xa0\x7a\x2b\xd1\xbe\x59\x1f\x3a\xb1\xd0\x62\xe1\x86\x3b\x0d\x23\xd7\x36\x6c\x31\xf2\x6e\x7e\x96\xe1\x00\x48\xcd\x40\x45\xaf\x3d\xa8\xa7\xc9\x69\x7b\x3b\xee\xc7\x02\xb5\xe7\x06\x7d\xec\x7e\x7a\x5a\x3c\x20\x7a\xb1\xa1\xed\x89\xe1\xd8\xd0\xb6\x37\x14\x1b\xda\x76\xe3\x70\x5e\xe7\xc2\x48\x3c\xfa\x82\x92\x5d\xf5\x0d\x2c\xf5\x89\x35\x26\xf4\xb7\xd8\x6a\x7d\xa2\x8c\x7b\xa1\x7b\x1b\xe1\x80\xd2\x36\xf4\xd9\x82\x32\x3f\xe9\x22\x1d\xa4\x75\x37\xe8\x41\x59\x78\x00\x77\xe7\xa3\xc2\xa8\xe1\xde\xe3\x43\xcb\xee\x11\xf9\xef\x0f\x6e\x47\x2b\xda\x09\x8a\x2d\x6d\x25\xdd\x2d\x36\xb4\xcd\x1d\x2f\x8b\x90\x51\xfc\x4c\x7a\xaa\x3d\x28\x4d\x2a\x27\x11\xdb\x36\xe1\x2c\x1f\x31\x0b\x87\x2e\xb3\x2f\x71\xe1\xc0\xdf\x88\xaf\xfd\x07\x60\x05\xe2\x37\x25\x78\x59\x83\x64\x5f\x60\x81\xc0\xc4\xe9\xa4\x45\x80\x25\xfa\xba\x6c\xa8\xbe\xe6\xab\x1c\x61\xb3\x97\xf3\x91\x51\x3c\x7b\x31\x4f\x79\xc2\xe1\x1e\xf2\xb5\x47\xbe\x9a\x77\x94\xd2\x96\x2d\x6e\x61\x9f\x6e\x00\x66\xa3\xbe\x2a\xc1\xe1\xab\xfe\x06\xfc\x92\xb6\xec\xf2\x16\xf6\x86\x65\x24\xf9\x67\x8f\xe0\x75\xf9\xce\xe2\x4a\x0c\xfe\x05\xc6\x79\x14\x7a\x8a\x9a\xf2\x95\xa4\x9b\xf7\x2d\x06\x5d\x8d\xcd\xf8\x80\xb6\xec\xef\xb0\x1f\x7b\x57\x46\x38\x56\xc3\xcd\x76\x35\xb6\xfd\x6a\x33\xa0\x2a\xe0\xe0\x04\x4c\xdc\x37\xad\x90\x7a\x4c\x66\x38\x60\x46\xc8\xc5\x95\x53\x7f\x25\x61\xc9\x9a\xe6\x52\xe9\x7d\x03\xe5\x37\xd6\x5e\x8c\x22\x6a\x6e\x7e\x3f\x84\x4b\xc8\x60\x70\xe8\x3e\x83\x71\x47\x73\xb5\xc3\x07\x93\xce\xe6\x78\xcb\xe1\xe0\x3e\x0a\xf2\xdd\x77\xc4\xce\x99\x17\x9b\x9f\xc3\x8f\xc2\x6c\xbf\x4b\x2e\xff\x64\xb0\xcb\xd5\x6e\x44\x5e\xbe\x0a\xbd\xf5\xd4\x46\x68\xb4\x22\x7e\xc9\xf4\xf7\x62\xcb\x6b\x95\xcf\x50\x84\xc3\xbc\xe8\xe1\x4f\x43\xf7\x26\xe3\x5f\x23\x5f\x7e\xfd\xf8\xfe\x5d\x4a\x6c\xfb\x04\xd8\x63\x96\xac\xeb\x4f\xc2\x1f\x73\xc7\xf7\x6e\x02\x4f\x69\x6f\x72\xf9\xbd\x36\xfa\x23\xd5\xa7\x73\xf9\x73\xc4\xcd\x12\xe2\xf7\x15\xb4\xc3\x71\x74\x83\x82\x56\x28\xbd\x62\x2a\x4b\xfb\xdf\xfd\x85\x71\x80\xbf\xcd\xb2\xb7\xa0\x29\xc6\x3d\xfd\xdb\x48\x3a\x53\x24\xdd\x84\x15\x88\x4d\xd2\x29\xb7\xb0\x9f\x40\x6c\xb2\xd8\x29\x47\x4c\x9f\x36\x07\x7b\xa8\x35\xfe\x90\xd8\x0f\xc0\xb5\x14\xac\xee\x8a\x5e\x5d\x91\x1a\x1a\xd0\x3d\xca\x8f\xa7\x8e\x14\xb8\x95\xf8\x44\x84\x98\x64\x38\xd6\xe9\xbb\xe4\xc1\x3b\x26\xd9\x8f\x76\x22\x1b\x25\xee\x82\x96\xfb\xb1\xf9\xcd\x8f\xc6\x6c\x36\xb6\x16\x46\xd1\x65\xff\xe7\x22\xab\xe8\x88\x8d\xdd\x07\x00\xde\x98\x59\xa5\x80\xca\x6a\x9d\x99\xfc\xd9\xf1\xf9\x78\x1f\x93\x54\x68\x20\x33\x64\xd1\x66\x8c\x43\x6e\xa3\xed\x24\xfe\x28\x55\xdb\x30\x9d\x67\x23\xf7\xfa\xb0\x49\xb0\x11\xdc\xcd\xcf\x5e\xc4\xbf\xd0\xed\x1a\xaa\xfd\xf0\xcb\x30\xcc\x21\x41\xbf\x4a\x87\x23\xfa\xf5\x3c\x28\xaf\x84\xeb\x53\xcd\x5c\x8c\x66\x56\xf1\xc8\x99\x9d\x8f\xc2\xb8\x51\xf1\xf0\xb8\x35\x9c\x8c\x3b\x3d\x0f\x8d\x7b\x3d\xe1\xde\x1f\x9d\x72\x64\xf3\x7b\x6c\x0f\xe4\x98\x64\xff\x10\xcd\x7e\x25\x78\xd8\xe5\xcc\x78\xcf\x38\xd5\xa0\xb2\x31\x99\xf9\xd5\xcc\xed\xbe\x3e\x48\x9a\xa0\xf0\x98\x36\x99\xe7\x4d\xd6\x25\x4e\x5a\x07\x53\xea\x18\x8f\x4f\x67\x8e\x66\x0d\xbc\xfe\x73\x0f\x65\x62\xeb\xcf\x2f\xfd\x10\x82\xc1\x62\x3f\x8b\xd5\x91\x51\x66\x41\xd9\xbf\x33\xf3\x77\x65\x7c\xd4\xff\x21\x0b\x22\xbd\x09\x25\x6d\x22\xde\x12\xc6\x0d\xca\xba\x12\xab\xfa\x6d\xb9\xa1\xba\x5a\xe7\x12\x6c\x72\x1f\x54\x82\x6b\xc6\xb7\x70\xef\x09\x8b\xf8\x5b\xf2\x6c\xea\xad\xe3\x3b\x28\x8b\xaf\x32\xb7\x0e\x73\xc6\x6f\xe7\xb3\x4c\xdc\xfc\x06\x95\xb6\xee\x1f\xe7\x80\x74\xfe\xfe\x5b\xd9\x9e\x99\xdb\x79\xd4\x36\xf9\xbf\xd9\xdd\xfe\x0a\x70\xb0\x97\x84\xc3\xc4\xfc\x18\x26\x40\xbc\xa6\xb9\xd1\x43\x91\x17\x93\xc1\xf0\x3f\x01\x00\x00\xff\xff\x04\x81\x30\x08\x4e\x21\x00\x00")

func staticJavascriptMapzenWhosonfirstInspectorJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptMapzenWhosonfirstInspectorJs,
		"static/javascript/mapzen.whosonfirst.inspector.js",
	)
}

func staticJavascriptMapzenWhosonfirstInspectorJs() (*asset, error) {
	bytes, err := staticJavascriptMapzenWhosonfirstInspectorJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/mapzen.whosonfirst.inspector.js", size: 8526, mode: os.FileMode(420), modTime: time.Unix(1563974687, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptMapzenWhosonfirstRenderJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\xc1\x6e\xdb\x3c\x0c\x3e\xdb\x4f\x41\xf8\x3f\xd4\x46\xf2\xbb\xdd\xb5\xae\x31\x14\xc3\xae\x3b\xed\x36\x14\x85\x62\x31\x8b\x16\xc5\x0e\x24\xa6\x49\xd7\x06\xd8\x3b\xec\x0d\xf7\x24\x03\x25\xd9\xb1\x13\xc7\x3b\x14\xb5\xad\xef\xfb\x48\x91\x1f\x89\xbc\x08\x03\x1b\xb1\xfd\x89\x35\x94\xed\xc3\xfb\x3b\xbc\x1d\x8b\xd8\xbf\xe5\xfb\x55\x63\x9b\x7a\xa9\x8c\xa5\x0e\x32\xf8\x18\xe0\x23\xf8\xdc\x60\x2d\xd1\x40\x09\xe9\x72\x57\x57\xa4\x9a\x3a\xcd\xde\xe2\x38\xe2\xa8\x16\xf5\x12\x4a\xe0\xd7\xe8\xc6\x03\x9f\xa5\x20\x71\x73\x0f\x1d\x58\xce\xa1\xa2\x83\xa3\x44\x8e\xb4\x37\x62\xbb\x75\x8a\xb2\xa9\x76\x1b\xac\x29\xaf\x0c\x0a\xc2\xcf\x1a\xf9\x2d\x4d\xa4\x7a\x49\xb2\x82\xf1\x01\x9b\x5b\xa4\x47\x22\xa3\x16\x3b\xc2\x34\xa9\xb4\xb0\x36\x99\x43\x22\x77\x1b\x56\x22\xb1\xd0\xf8\xbf\x41\xbb\x6d\x6a\xab\x5e\x90\xc9\x6d\x34\x9f\x95\x13\xe3\x3f\xb5\x84\xf4\xd1\x18\xf1\x9a\x2b\xeb\xfe\xa7\x32\xcb\xde\xf8\x24\xea\x2e\xca\xb7\x0a\xd7\x7e\xd6\xca\x52\x7b\x05\x27\x72\x8c\x23\x00\x00\x7e\x44\x6d\x11\x58\x90\x5e\xb7\xd8\x2c\x53\x99\x41\x59\x42\xd2\x2c\x7e\x60\x45\xc9\x94\xaa\x54\xd5\xb9\x6a\x27\xe8\x69\x9c\x7a\xd5\xd4\x84\x35\x9d\x71\x09\x0f\x3d\xee\x30\xc6\xb5\x82\xda\xad\xa8\x93\xac\x88\x42\x11\x02\x21\xe7\xda\xd6\xf2\xd3\x4a\x69\x99\x86\x60\xfd\x74\xda\xe2\xf7\x61\x9e\xe9\x51\x06\x69\x67\xea\xb6\x9f\x85\x17\x3f\xce\x07\x66\x50\x15\x4d\x9a\xc1\xb5\x6e\x22\x73\x77\x1e\xcc\xe0\x9e\xaf\x59\xc1\x0b\x79\x27\x48\x24\xa1\xb4\x75\xb4\xb6\x59\xcb\xc6\x40\xba\x06\x55\x83\x74\x9d\xe9\xaa\x6c\x9a\xfd\x54\x7c\x13\x82\x3b\xac\x16\x0b\xd4\xae\x03\x50\xc2\xda\x7f\xef\x0e\x9f\x2b\x3a\xf0\x98\xf0\x05\xe1\x23\xdf\x13\x66\x90\xe4\x09\xcc\x60\x0d\xf7\x17\xf0\x15\x8a\xe9\xa6\xd1\xea\x22\xf4\x25\xfa\x2b\x1e\xe8\x4b\x23\x31\x3d\xa5\x16\x48\x5e\x7f\xd0\x3c\x87\x71\xc7\x23\x1e\xbb\x9a\x86\x6c\xd3\xe8\x48\x8b\x46\xbe\x9e\x3b\x5a\x90\x48\xe5\xb7\xf5\xd3\xdc\xd5\x21\x30\x82\xfa\x20\x09\x26\xf7\x05\x4d\xb3\x1f\x9c\xfb\xbc\x03\xe2\xfc\x70\xe0\x52\xcf\xf7\xae\x18\x78\xb4\xd9\x77\xb3\xea\x41\xc1\xa9\x0e\x5a\x78\x93\x46\x3d\x97\xf2\x90\x8f\xba\xb4\x73\x8f\x2f\xd5\xce\x17\x2a\xd7\x58\x7f\xa7\xd5\x60\xa7\x84\xc3\x12\xee\xba\xb9\x77\x21\x2f\x26\x37\xf9\xf3\xeb\x77\x32\xbe\x4f\x4e\x3a\x0f\x25\x7c\xb8\xae\x13\x6a\x7d\xf7\x34\x2e\xe3\xdc\xa2\xec\x54\x4f\x77\xfa\x72\x36\x98\xa6\xca\xbb\x02\x14\x3c\xf8\xbb\x16\xa0\x66\xb3\x90\x46\xd7\x7b\x45\xb8\x99\x50\xd6\xaa\x6f\xda\xeb\x46\x51\x3e\x79\x9e\x90\xff\x78\x42\x54\xbf\xa5\x1c\xe3\x9a\x67\xf8\x66\x83\x33\x06\x8f\xb7\x9b\xa1\x23\xdd\xe6\x36\x8c\x77\xdb\xb3\xdd\x5a\xf2\x23\x2e\x8b\xe8\xf6\xd6\xa7\xbf\xa2\x8d\xb6\x5b\xac\x94\xd0\xd5\x4a\x18\x9b\xca\xac\xe8\x33\x78\xc5\xfe\x7b\x03\x33\x9a\x1f\xcf\xb6\x98\x92\x7d\x4b\x8c\x00\x48\x91\xc6\x13\x86\x1b\x77\x0a\x3d\xb9\x17\x4e\x1b\xc1\xc9\xf6\x2b\x17\x76\x41\xbf\x64\x8c\x69\x4b\x16\xc5\x11\xff\x24\xe8\x3b\xb0\x88\xe3\x63\x96\x66\x45\x14\xff\x0d\x00\x00\xff\xff\x8f\x00\x04\x97\x74\x08\x00\x00")

func staticJavascriptMapzenWhosonfirstRenderJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptMapzenWhosonfirstRenderJs,
		"static/javascript/mapzen.whosonfirst.render.js",
	)
}

func staticJavascriptMapzenWhosonfirstRenderJs() (*asset, error) {
	bytes, err := staticJavascriptMapzenWhosonfirstRenderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/mapzen.whosonfirst.render.js", size: 2164, mode: os.FileMode(420), modTime: time.Unix(1563909755, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticCssMapzenWhosonfirstInspectorCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xdd\x6e\xdb\x30\x0c\x85\xaf\xe7\xa7\xe0\x50\xf4\xd2\x46\x9a\x2d\xc0\xa0\x3e\x8d\x6c\xd1\x89\x10\x59\xd4\x28\xba\x4d\x56\xf4\xdd\x07\x59\xb2\xe7\xfc\xb4\xc5\x90\x2b\xf3\x50\xe7\x23\x78\x88\x54\x4d\x47\x5e\xb4\xf5\xc8\xf0\x56\x7d\x03\x80\x41\x9f\xea\x57\x6b\xe4\xa0\xc0\x93\x47\xf8\x6e\x87\x40\x2c\xda\xcb\x73\xd1\x79\x6f\x7d\x2d\x14\xd4\x13\xe3\x70\x51\x6c\x49\x84\x86\x52\x7f\xaf\xaa\x87\x18\xac\x9f\xad\x8d\x8d\xc1\xe9\xb3\x4a\xae\x93\xda\xf4\xc4\x43\x6d\xbd\xb3\x1e\xa1\x1d\x45\xc8\x97\x19\x16\x43\x87\xbd\xa8\x66\xb7\x70\x16\x81\xed\xfe\xb0\x28\x89\x34\xe8\x00\x6f\x55\xea\x38\xe0\xa4\xc1\x8f\xcd\x26\x9c\xb2\xf8\x7b\x44\x3e\x43\xc2\x95\x9e\xa0\x8d\xb1\x7e\xaf\xa0\xd9\x25\x83\x55\x29\x23\xe1\x69\xf6\x35\x28\xda\xba\x58\xde\xd1\x0b\x72\xef\xe8\x55\x41\xec\x98\x9c\xbb\xd8\xce\x0a\x5e\xd8\x50\xf6\x79\xaf\x7a\xb1\xb0\x99\xc6\x18\x47\x27\xff\x4b\x83\xfb\x38\xf8\x9a\x17\x69\xe4\x0e\x0b\xee\xe6\xe9\xe7\xbc\x1b\xf5\xd3\x71\xdf\xab\x4a\x74\xeb\x66\x56\xca\x7c\x86\x6d\xe7\x08\x7a\xf2\x52\xf7\x7a\xb0\xee\xac\x20\x6a\x1f\xeb\x88\x6c\xfb\x2c\xe6\x9b\x7c\xda\x6c\x1e\xf3\x77\x4b\x6c\x90\xeb\x18\x74\x37\x25\x39\xfa\x88\x85\xc3\x05\xf2\x82\x2c\xb6\xd3\xae\xd6\xce\xee\xbd\x02\xa1\xf0\x7c\x19\xff\xd5\x7e\x72\x21\x7d\x4f\x3e\x87\xe2\xd3\xea\xee\xb8\x67\x1a\xbd\xa9\x3b\x72\xc4\xea\x01\x4d\xfa\xad\x07\x51\x10\xc9\x59\x03\x72\xb0\x3e\xd7\x05\x4f\x52\xc8\xe9\xa6\x6e\x39\x77\x82\x69\xb6\x57\xe7\xa8\xa0\xd9\xee\x70\x98\xc6\x31\x65\x9c\xbb\xc6\x97\xfd\x1f\xc0\xca\xa8\xff\x26\xbd\x8e\x68\x39\xf7\x9c\x95\x30\x2c\xd4\xbc\xff\x9f\xbf\x1e\xbf\xcc\x7d\x72\x0a\x3c\x47\x3d\xa5\x1a\xed\x1f\x54\x71\xd0\x49\x5d\x5f\xd2\xee\xee\x25\xad\x2f\xf1\xb6\x23\xfd\x75\x74\xce\x76\xc7\x7a\x98\x19\x39\x16\x68\xdd\x88\xab\xe5\x1b\xec\x88\xb5\x58\xf2\x6a\xf4\x06\x39\x1d\x5d\x7e\x8e\xcc\xc4\x1f\xa5\x0b\xc1\xfa\xe3\x15\xf1\x6f\x00\x00\x00\xff\xff\x51\xa5\x09\x5a\x28\x05\x00\x00")

func staticCssMapzenWhosonfirstInspectorCssBytes() ([]byte, error) {
	return bindataRead(
		_staticCssMapzenWhosonfirstInspectorCss,
		"static/css/mapzen.whosonfirst.inspector.css",
	)
}

func staticCssMapzenWhosonfirstInspectorCss() (*asset, error) {
	bytes, err := staticCssMapzenWhosonfirstInspectorCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/css/mapzen.whosonfirst.inspector.css", size: 1320, mode: os.FileMode(420), modTime: time.Unix(1563975030, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticCssMapzenWhosonfirstRenderCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xdf\x6a\xf3\x30\x0c\xc5\xef\xf3\x14\xfa\xf8\xd8\xa5\x4b\x57\xd8\x8d\xf7\x34\x4e\xac\x24\x62\xfe\x87\xac\x6c\x2d\xa3\xef\x3e\x12\xbb\xa1\x66\x2d\x8c\x5c\xe9\x28\x3a\xd2\xef\x78\x71\xf0\xdd\x01\x00\x38\xca\xa2\xb2\x5c\x1c\x2a\xb9\x24\xd4\x10\x62\xc0\xf7\xad\xe5\x0d\x4f\x14\xf4\x31\x9d\x4b\x9d\x8c\xb5\x14\xa6\x22\x5c\xbb\xee\x60\x17\x9f\x90\x41\x4c\xef\x70\xb7\x0b\xa8\x66\xa4\x69\x16\x7d\x42\x5f\x06\xc7\x18\x44\x8d\xc6\x93\xbb\x68\xc8\x26\x64\x95\x91\x69\x2c\xcd\x2f\xb2\x32\xeb\xd7\xe3\xf1\xa5\xd4\x7d\x64\x8b\xac\x72\x32\xc3\xba\x0c\x96\x90\x51\x1e\xec\x13\xae\x2b\x3f\x91\x85\x06\xe3\x94\x71\x34\x05\x0d\x12\x53\x7b\x2f\xec\x04\x95\x68\x13\xd6\xba\x71\x9d\xab\x5f\x6f\x86\x8f\x89\xe3\x12\xac\x1a\xa2\x8b\xac\xff\xa3\x5d\xbf\xe6\x3c\x89\xe9\x3e\xaa\xaa\xf6\x51\x24\xfa\xda\xd8\x16\xdc\x35\x1d\x8e\xa2\x21\x47\x47\x16\x64\xa6\x00\xff\xc8\xa7\xc8\x62\x82\x34\x26\xbc\x85\xf7\xe4\xc7\xdd\x54\xf0\x2c\x95\x78\x35\xfe\xcd\xd7\x46\x70\x38\xbd\xa1\x6f\x71\xf5\x48\x9c\x45\x0d\x33\x39\x7b\x43\xbf\x83\x7b\x72\x68\x6b\xe1\xcc\x63\x87\x5b\x10\x7f\x30\x29\x8f\x79\x9b\x7f\x88\xd5\x52\x34\x5a\x4d\xf5\xb0\xeb\x4d\x04\xd7\xee\x27\x00\x00\xff\xff\xcd\x95\x93\x60\xe8\x02\x00\x00")

func staticCssMapzenWhosonfirstRenderCssBytes() ([]byte, error) {
	return bindataRead(
		_staticCssMapzenWhosonfirstRenderCss,
		"static/css/mapzen.whosonfirst.render.css",
	)
}

func staticCssMapzenWhosonfirstRenderCss() (*asset, error) {
	bytes, err := staticCssMapzenWhosonfirstRenderCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/css/mapzen.whosonfirst.render.css", size: 744, mode: os.FileMode(420), modTime: time.Unix(1563546049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/javascript/mapzen.whosonfirst.geojson.js": staticJavascriptMapzenWhosonfirstGeojsonJs,
	"static/javascript/mapzen.whosonfirst.inspector.init.js": staticJavascriptMapzenWhosonfirstInspectorInitJs,
	"static/javascript/mapzen.whosonfirst.inspector.js": staticJavascriptMapzenWhosonfirstInspectorJs,
	"static/javascript/mapzen.whosonfirst.render.js": staticJavascriptMapzenWhosonfirstRenderJs,
	"static/css/mapzen.whosonfirst.inspector.css": staticCssMapzenWhosonfirstInspectorCss,
	"static/css/mapzen.whosonfirst.render.css": staticCssMapzenWhosonfirstRenderCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.inspector.css": &bintree{staticCssMapzenWhosonfirstInspectorCss, map[string]*bintree{}},
			"mapzen.whosonfirst.render.css": &bintree{staticCssMapzenWhosonfirstRenderCss, map[string]*bintree{}},
		}},
		"javascript": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.geojson.js": &bintree{staticJavascriptMapzenWhosonfirstGeojsonJs, map[string]*bintree{}},
			"mapzen.whosonfirst.inspector.init.js": &bintree{staticJavascriptMapzenWhosonfirstInspectorInitJs, map[string]*bintree{}},
			"mapzen.whosonfirst.inspector.js": &bintree{staticJavascriptMapzenWhosonfirstInspectorJs, map[string]*bintree{}},
			"mapzen.whosonfirst.render.js": &bintree{staticJavascriptMapzenWhosonfirstRenderJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
